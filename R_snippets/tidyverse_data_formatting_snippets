# Gosh how to remove duplicates in an efficient and dplyr way!!!!
df14 <- bind_rows(A3SS, A5SS, RI, SE, MXE) %>%
  distinct(locus, .keep_all = TRUE)


# when calculate the mean of two columns
# be sure to use the rowwise() function to compute the mean for each row
fil %>%
  filter(type == 'CE') %>%
  rowwise() %>%
  mutate(Psi_A = mean(c(Psi_14, Psi_89), na.rm=T))


# rename column names of a dataframe with replacement functionality
rename_all(
    funs(
        stringr::str_replace_all(., ' ', '_') %>%
        stringr::str_replace_all(., 'Factor_Value', '') %>%
        stringr::str_replace_all(., '\\[|\\]', '') 
      
  )) %>%
  
  
# sample code for reading multiple files and then combine with file name informatin also recorded
  
  data <- cities %>% # start with the cities table
  # create filenames
  mutate(filename = paste(city, "_", state, ".csv", sep="")) %>%
  # read in data
  mutate(file_contents = map(filename,
           ~ read_csv(file.path(data_path, .)))
        ) %>% 
  select(-filename) %>% # remove filenames, not needed anynmore
  unnest() %>% # unnest
  select(-location) # remove location column, not needed
                    # since we have city and state columns

# rename a column by its index not name
rename(Cts = names(.)[1])

# use certain column name as row name (here the "probes" column will be used as row name)
  remove_rownames() %>%
  column_to_rownames(var = 'probes')
